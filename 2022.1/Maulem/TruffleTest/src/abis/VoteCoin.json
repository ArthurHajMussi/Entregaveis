{
  "contractName": "VoteCoin",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokensForTest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAddress",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokensForTest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/Governance.sol\":\"VoteCoin\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/src/contracts/Governance.sol\":{\"keccak256\":\"0xc28015103d600c9e8cb19ac9585c87c14a712e566fecc9f56d411c65b4d87730\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0701128ce2c2c768a7edadef80d36067c314b09646f1a49839a36b360eac76f\",\"dweb:/ipfs/QmS2YkT4EN7BP83dRgdfp8GwrigUU2EhD77Uw2NEco4ubD\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280600881526020017f566f7465436f696e0000000000000000000000000000000000000000000000008152506040518060400160405280600281526020017f56430000000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000969291906200024e565b508060049080519060200190620000af9291906200024e565b505050620000c533600a620000cb60201b60201c565b6200049c565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200013e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001359062000351565b60405180910390fd5b62000152600083836200024460201b60201c565b8060026000828254620001669190620003a1565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620001bd9190620003a1565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000224919062000373565b60405180910390a362000240600083836200024960201b60201c565b5050565b505050565b505050565b8280546200025c9062000408565b90600052602060002090601f016020900481019282620002805760008555620002cc565b82601f106200029b57805160ff1916838001178555620002cc565b82800160010185558215620002cc579182015b82811115620002cb578251825591602001919060010190620002ae565b5b509050620002db9190620002df565b5090565b5b80821115620002fa576000816000905550600101620002e0565b5090565b60006200030d601f8362000390565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b6200034b81620003fe565b82525050565b600060208201905081810360008301526200036c81620002fe565b9050919050565b60006020820190506200038a600083018462000340565b92915050565b600082825260208201905092915050565b6000620003ae82620003fe565b9150620003bb83620003fe565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620003f357620003f26200043e565b5b828201905092915050565b6000819050919050565b600060028204905060018216806200042157607f821691505b602082108114156200043857620004376200046d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b61160180620004ac6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063395093511161008c578063a457c2d711610066578063a457c2d71461022a578063a9059cbb1461025a578063ad44487d1461028a578063dd62ed3e14610294576100cf565b806339509351146101ac57806370a08231146101dc57806395d89b411461020c576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce5671461017057806338cc48311461018e575b600080fd5b6100dc6102c4565b6040516100e99190611266565b60405180910390f35b61010c60048036038101906101079190610e5b565b610356565b6040516101199190611230565b60405180910390f35b61012a610379565b60405161013791906113a8565b60405180910390f35b61015a60048036038101906101559190610e0c565b610383565b6040516101679190611230565b60405180910390f35b6101786103b2565b60405161018591906113c3565b60405180910390f35b6101966103bb565b6040516101a3919061124b565b60405180910390f35b6101c660048036038101906101c19190610e5b565b6103c3565b6040516101d39190611230565b60405180910390f35b6101f660048036038101906101f19190610da7565b61046d565b60405161020391906113a8565b60405180910390f35b6102146104b5565b6040516102219190611266565b60405180910390f35b610244600480360381019061023f9190610e5b565b610547565b6040516102519190611230565b60405180910390f35b610274600480360381019061026f9190610e5b565b610631565b6040516102819190611230565b60405180910390f35b610292610654565b005b6102ae60048036038101906102a99190610dd0565b6106ac565b6040516102bb91906113a8565b60405180910390f35b6060600380546102d3906114fc565b80601f01602080910402602001604051908101604052809291908181526020018280546102ff906114fc565b801561034c5780601f106103215761010080835404028352916020019161034c565b820191906000526020600020905b81548152906001019060200180831161032f57829003601f168201915b5050505050905090565b600080610361610733565b905061036e81858561073b565b600191505092915050565b6000600254905090565b60008061038e610733565b905061039b858285610906565b6103a6858585610992565b60019150509392505050565b60006012905090565b600030905090565b6000806103ce610733565b9050610462818585600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461045d91906113fa565b61073b565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546104c4906114fc565b80601f01602080910402602001604051908101604052809291908181526020018280546104f0906114fc565b801561053d5780601f106105125761010080835404028352916020019161053d565b820191906000526020600020905b81548152906001019060200180831161052057829003601f168201915b5050505050905090565b600080610552610733565b90506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905083811015610618576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060f90611368565b60405180910390fd5b610625828686840361073b565b60019250505092915050565b60008061063c610733565b9050610649818585610992565b600191505092915050565b600061065f3361046d565b1461069f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069690611308565b60405180910390fd5b6106aa33600a610c13565b565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a290611348565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561081b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610812906112a8565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108f991906113a8565b60405180910390a3505050565b600061091284846106ac565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461098c578181101561097e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610975906112c8565b60405180910390fd5b61098b848484840361073b565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a02576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f990611328565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6990611288565b60405180910390fd5b610a7d838383610d73565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afa906112e8565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b9691906113fa565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bfa91906113a8565b60405180910390a3610c0d848484610d78565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7a90611388565b60405180910390fd5b610c8f60008383610d73565b8060026000828254610ca191906113fa565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cf691906113fa565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d5b91906113a8565b60405180910390a3610d6f60008383610d78565b5050565b505050565b505050565b600081359050610d8c8161159d565b92915050565b600081359050610da1816115b4565b92915050565b600060208284031215610db957600080fd5b6000610dc784828501610d7d565b91505092915050565b60008060408385031215610de357600080fd5b6000610df185828601610d7d565b9250506020610e0285828601610d7d565b9150509250929050565b600080600060608486031215610e2157600080fd5b6000610e2f86828701610d7d565b9350506020610e4086828701610d7d565b9250506040610e5186828701610d92565b9150509250925092565b60008060408385031215610e6e57600080fd5b6000610e7c85828601610d7d565b9250506020610e8d85828601610d92565b9150509250929050565b610ea081611462565b82525050565b610eaf816114a5565b82525050565b6000610ec0826113de565b610eca81856113e9565b9350610eda8185602086016114c9565b610ee38161158c565b840191505092915050565b6000610efb6023836113e9565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f616022836113e9565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610fc7601d836113e9565b91507f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006000830152602082019050919050565b60006110076026836113e9565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061106d601e836113e9565b91507f596f7520616c726561647920676f7420636f696e7320746f20746573742100006000830152602082019050919050565b60006110ad6025836113e9565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006111136024836113e9565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006111796025836113e9565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006111df601f836113e9565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b61121b8161148e565b82525050565b61122a81611498565b82525050565b60006020820190506112456000830184610e97565b92915050565b60006020820190506112606000830184610ea6565b92915050565b600060208201905081810360008301526112808184610eb5565b905092915050565b600060208201905081810360008301526112a181610eee565b9050919050565b600060208201905081810360008301526112c181610f54565b9050919050565b600060208201905081810360008301526112e181610fba565b9050919050565b6000602082019050818103600083015261130181610ffa565b9050919050565b6000602082019050818103600083015261132181611060565b9050919050565b60006020820190508181036000830152611341816110a0565b9050919050565b6000602082019050818103600083015261136181611106565b9050919050565b600060208201905081810360008301526113818161116c565b9050919050565b600060208201905081810360008301526113a1816111d2565b9050919050565b60006020820190506113bd6000830184611212565b92915050565b60006020820190506113d86000830184611221565b92915050565b600081519050919050565b600082825260208201905092915050565b60006114058261148e565b91506114108361148e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114455761144461152e565b5b828201905092915050565b600061145b8261146e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006114b0826114b7565b9050919050565b60006114c28261146e565b9050919050565b60005b838110156114e75780820151818401526020810190506114cc565b838111156114f6576000848401525b50505050565b6000600282049050600182168061151457607f821691505b602082108114156115285761152761155d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b6115a681611450565b81146115b157600080fd5b50565b6115bd8161148e565b81146115c857600080fd5b5056fea2646970667358221220c242236a436753e9b620cf6bd5dc16510dd828f50b3e00dbf8fc175c7a7ed31964736f6c63430008000033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2383:7",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "153:183:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "163:74:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "229:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "234:2:7",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "170:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "170:67:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "163:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "258:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "263:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "254:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "254:11:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "267:33:7",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "247:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "247:54:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "247:54:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "311:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "322:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "327:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "318:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "318:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "311:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "141:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "149:3:7",
                "type": ""
              }
            ],
            "src": "7:329:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "407:53:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "424:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "447:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "429:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "429:24:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "417:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "417:37:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "417:37:7"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "395:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "402:3:7",
                "type": ""
              }
            ],
            "src": "342:118:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "637:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "647:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "659:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "670:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "655:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "655:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "647:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "694:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "705:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "690:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "690:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "713:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "719:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "709:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "709:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "683:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "683:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "683:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "739:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "873:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "747:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "747:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "739:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "617:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "632:4:7",
                "type": ""
              }
            ],
            "src": "466:419:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "989:124:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "999:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1011:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1022:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1007:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1007:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "999:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1079:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1092:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1103:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1088:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1088:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1035:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1035:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1035:71:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "961:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "973:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "984:4:7",
                "type": ""
              }
            ],
            "src": "891:222:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1215:73:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1232:3:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1237:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1225:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1225:19:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1225:19:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1253:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1272:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1277:4:7",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1268:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1268:14:7"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1253:11:7"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1187:3:7",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1192:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "1203:11:7",
                "type": ""
              }
            ],
            "src": "1119:169:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1338:261:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1348:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "1371:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1353:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1353:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "1348:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1382:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "1405:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1387:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1387:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "1382:1:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1545:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "1547:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1547:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1547:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "1466:1:7"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1473:66:7",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "1541:1:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1469:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1469:74:7"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1463:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1463:81:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1460:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1577:16:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "1588:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "1591:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1584:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1584:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "1577:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "1325:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "1328:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "1334:3:7",
                "type": ""
              }
            ],
            "src": "1294:305:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1650:32:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1660:16:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1671:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1660:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1632:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1642:7:7",
                "type": ""
              }
            ],
            "src": "1605:77:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1739:269:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1749:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1763:4:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1769:1:7",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "1759:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1759:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1749:6:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1780:38:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1810:4:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1816:1:7",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1806:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1806:12:7"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "1784:18:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1857:51:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1871:27:7",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1885:6:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1893:4:7",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1881:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1881:17:7"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1871:6:7"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1837:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1830:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1830:26:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1827:2:7"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1960:42:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "1974:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1974:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1974:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1924:18:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1947:6:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1955:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1944:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1944:14:7"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "1921:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1921:38:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1918:2:7"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "1723:4:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1732:6:7",
                "type": ""
              }
            ],
            "src": "1688:320:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2042:152:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2059:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2062:77:7",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2052:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2052:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2052:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2156:1:7",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2159:4:7",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2149:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2149:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2149:15:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2180:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2183:4:7",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2173:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2173:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2173:15:7"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "2014:180:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2228:152:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2245:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2248:77:7",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2238:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2238:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2238:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2342:1:7",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2345:4:7",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2335:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2335:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2335:15:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2366:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2369:4:7",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2359:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2359:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2359:15:7"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "2200:180:7"
          }
        ]
      },
      "contents": "{\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n\n        mstore(add(pos, 0), \"ERC20: mint to the zero address\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n}\n",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:13906:7",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:7"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:7",
                "type": ""
              }
            ],
            "src": "7:139:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "204:87:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "214:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "236:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "223:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "223:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "214:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "279:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "252:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "252:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "252:33:7"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "182:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "190:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "198:5:7",
                "type": ""
              }
            ],
            "src": "152:139:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "363:196:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "409:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "418:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "421:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "411:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "411:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "411:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "384:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "393:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "380:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "380:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "405:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "376:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "376:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "373:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "435:117:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "450:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "464:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "454:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "479:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "514:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "525:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "510:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "510:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "534:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "489:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "489:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "479:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "333:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "344:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "356:6:7",
                "type": ""
              }
            ],
            "src": "297:262:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "648:324:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "694:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "703:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "706:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "696:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "696:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "696:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "669:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "678:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "665:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "665:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "690:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "661:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "661:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "658:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "720:117:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "735:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "749:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "739:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "764:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "799:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "810:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "795:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "795:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "819:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "774:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "774:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "764:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "847:118:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "862:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "876:2:7",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "866:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "892:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "927:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "938:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "923:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "923:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "947:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "902:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "902:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "892:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "610:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "621:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "633:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "641:6:7",
                "type": ""
              }
            ],
            "src": "565:407:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1078:452:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1124:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1133:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1136:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1126:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1126:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1126:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1099:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1108:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1095:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1095:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1120:2:7",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1091:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1091:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1088:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1150:117:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1165:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1179:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1169:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1194:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1229:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1240:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1225:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1225:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1249:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1204:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1204:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1194:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1277:118:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1292:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1306:2:7",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1296:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1322:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1357:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1368:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1353:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1353:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1377:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1332:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1332:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1322:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1405:118:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1420:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1434:2:7",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1424:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1450:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1485:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1496:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1481:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1481:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1505:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1460:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1460:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1450:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1032:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1043:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1055:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1063:6:7",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1071:6:7",
                "type": ""
              }
            ],
            "src": "978:552:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1619:324:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1665:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1674:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1677:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1667:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1667:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1667:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1640:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1649:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1636:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1636:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1661:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1632:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1632:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1629:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1691:117:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1706:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1720:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1710:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1735:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1770:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1781:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1766:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1766:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1790:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1745:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1745:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1735:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1818:118:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1833:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1847:2:7",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1837:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1863:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1898:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1909:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1894:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1894:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1918:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1873:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1873:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1863:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1581:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1592:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1604:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1612:6:7",
                "type": ""
              }
            ],
            "src": "1536:407:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2008:50:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2025:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2045:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "2030:14:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2030:21:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2018:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2018:34:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2018:34:7"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1996:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2003:3:7",
                "type": ""
              }
            ],
            "src": "1949:109:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2142:79:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2159:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2208:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_ERC20_$587_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2164:43:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2164:50:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2152:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2152:63:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2152:63:7"
                }
              ]
            },
            "name": "abi_encode_t_contract$_ERC20_$587_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2130:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2137:3:7",
                "type": ""
              }
            ],
            "src": "2064:157:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2319:272:7",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2329:53:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2376:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2343:32:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2343:39:7"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2333:6:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2391:78:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2457:3:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2462:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2398:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2398:71:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2391:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2504:5:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2511:4:7",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2500:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2500:16:7"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2518:3:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2523:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2478:21:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2478:52:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2478:52:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2539:46:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2550:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2577:6:7"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "2555:21:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2555:29:7"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2546:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2546:39:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2539:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2300:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2307:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2315:3:7",
                "type": ""
              }
            ],
            "src": "2227:364:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2743:221:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2753:74:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2819:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2824:2:7",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2760:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2760:67:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2753:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2848:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2853:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2844:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2844:11:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2857:34:7",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2837:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2837:55:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2837:55:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2913:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2918:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2909:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2909:12:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2923:5:7",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2902:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2902:27:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2902:27:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2939:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2950:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2955:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2946:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2946:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2939:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2731:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2739:3:7",
                "type": ""
              }
            ],
            "src": "2597:367:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3116:220:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3126:74:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3192:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3197:2:7",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3133:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3133:67:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3126:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3221:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3226:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3217:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3217:11:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3230:34:7",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3210:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3210:55:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3210:55:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3286:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3291:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3282:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3282:12:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3296:4:7",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3275:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3275:26:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3275:26:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3311:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3322:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3327:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3318:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3318:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3311:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3104:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3112:3:7",
                "type": ""
              }
            ],
            "src": "2970:366:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3488:181:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3498:74:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3564:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3569:2:7",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3505:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3505:67:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3498:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3593:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3598:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3589:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3589:11:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3602:31:7",
                        "type": "",
                        "value": "ERC20: insufficient allowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3582:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3582:52:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3582:52:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3644:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3655:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3660:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3651:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3651:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3644:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3476:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3484:3:7",
                "type": ""
              }
            ],
            "src": "3342:327:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3821:224:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3831:74:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3897:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3902:2:7",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3838:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3838:67:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3831:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3926:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3931:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3922:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3922:11:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3935:34:7",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3915:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3915:55:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3915:55:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3991:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3996:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3987:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3987:12:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4001:8:7",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3980:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3980:30:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3980:30:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4020:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4031:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4036:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4027:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4027:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4020:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3809:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3817:3:7",
                "type": ""
              }
            ],
            "src": "3675:370:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4197:182:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4207:74:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4273:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4278:2:7",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4214:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4214:67:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4207:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4302:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4307:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4298:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4298:11:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4311:32:7",
                        "type": "",
                        "value": "You already got coins to test!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4291:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4291:53:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4291:53:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4354:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4365:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4370:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4361:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4361:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4354:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_6417290feae2941246440765532b745e432350c8257455f3b56bc64c698a6388_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4185:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4193:3:7",
                "type": ""
              }
            ],
            "src": "4051:328:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4531:223:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4541:74:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4607:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4612:2:7",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4548:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4548:67:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4541:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4636:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4641:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4632:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4632:11:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4645:34:7",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4625:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4625:55:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4625:55:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4701:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4706:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4697:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4697:12:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4711:7:7",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4690:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4690:29:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4690:29:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4729:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4740:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4745:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4736:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4736:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4729:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4519:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4527:3:7",
                "type": ""
              }
            ],
            "src": "4385:369:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4906:222:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4916:74:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4982:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4987:2:7",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4923:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4923:67:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4916:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5011:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5016:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5007:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5007:11:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5020:34:7",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5000:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5000:55:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5000:55:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5076:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5081:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5072:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5072:12:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5086:6:7",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5065:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5065:28:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5065:28:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5103:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5114:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5119:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5110:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5110:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5103:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4894:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4902:3:7",
                "type": ""
              }
            ],
            "src": "4760:368:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5280:223:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5290:74:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5356:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5361:2:7",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5297:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5297:67:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5290:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5385:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5390:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5381:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5381:11:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5394:34:7",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5374:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5374:55:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5374:55:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5450:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5455:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5446:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5446:12:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5460:7:7",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5439:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5439:29:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5439:29:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5478:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5489:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5494:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5485:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5485:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5478:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5268:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5276:3:7",
                "type": ""
              }
            ],
            "src": "5134:369:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5655:183:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5665:74:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5731:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5736:2:7",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5672:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5672:67:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5665:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5760:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5765:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5756:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5756:11:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5769:33:7",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5749:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5749:54:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5749:54:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5813:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5824:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5829:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5820:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5820:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5813:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5643:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5651:3:7",
                "type": ""
              }
            ],
            "src": "5509:329:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5909:53:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5926:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5949:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5931:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5931:24:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5919:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5919:37:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5919:37:7"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5897:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5904:3:7",
                "type": ""
              }
            ],
            "src": "5844:118:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6029:51:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6046:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6067:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "6051:15:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6051:22:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6039:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6039:35:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6039:35:7"
                }
              ]
            },
            "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6017:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6024:3:7",
                "type": ""
              }
            ],
            "src": "5968:112:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6178:118:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6188:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6200:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6211:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6196:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6196:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6188:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6262:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6275:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6286:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6271:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6271:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6224:37:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6224:65:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6224:65:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6150:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6162:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6173:4:7",
                "type": ""
              }
            ],
            "src": "6086:210:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6413:137:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6423:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6435:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6446:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6431:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6431:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6423:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6516:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6529:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6540:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6525:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6525:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_ERC20_$587_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6459:56:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6459:84:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6459:84:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20_$587__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6385:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6397:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6408:4:7",
                "type": ""
              }
            ],
            "src": "6302:248:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6674:195:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6684:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6696:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6707:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6692:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6692:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6684:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6731:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6742:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6727:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6727:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6750:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6756:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6746:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6746:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6720:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6720:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6720:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6776:86:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6848:6:7"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6857:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6784:63:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6784:78:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6776:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6646:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6658:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6669:4:7",
                "type": ""
              }
            ],
            "src": "6556:313:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7046:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7056:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7068:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7079:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7064:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7064:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7056:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7103:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7114:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7099:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7099:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7122:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7128:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7118:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7118:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7092:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7092:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7092:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7148:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7282:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7156:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7156:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7148:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7026:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7041:4:7",
                "type": ""
              }
            ],
            "src": "6875:419:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7471:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7481:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7493:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7504:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7489:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7489:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7481:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7528:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7539:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7524:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7524:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7547:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7553:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7543:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7543:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7517:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7517:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7517:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7573:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7707:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7581:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7581:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7573:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7451:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7466:4:7",
                "type": ""
              }
            ],
            "src": "7300:419:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7896:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7906:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7918:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7929:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7914:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7914:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7906:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7953:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7964:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7949:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7949:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7972:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7978:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7968:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7968:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7942:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7942:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7942:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7998:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8132:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8006:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8006:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7998:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7876:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7891:4:7",
                "type": ""
              }
            ],
            "src": "7725:419:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8321:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8331:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8343:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8354:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8339:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8339:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8331:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8378:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8389:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8374:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8374:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8397:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8403:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8393:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8393:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8367:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8367:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8367:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8423:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8557:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8431:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8431:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8423:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8301:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8316:4:7",
                "type": ""
              }
            ],
            "src": "8150:419:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8746:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8756:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8768:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8779:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8764:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8764:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8756:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8803:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8814:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8799:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8799:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8822:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8828:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8818:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8818:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8792:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8792:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8792:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8848:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8982:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_6417290feae2941246440765532b745e432350c8257455f3b56bc64c698a6388_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8856:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8856:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8848:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6417290feae2941246440765532b745e432350c8257455f3b56bc64c698a6388__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8726:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8741:4:7",
                "type": ""
              }
            ],
            "src": "8575:419:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9171:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9181:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9193:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9204:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9189:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9189:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9181:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9228:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9239:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9224:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9224:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9247:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9253:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9243:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9243:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9217:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9217:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9217:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9273:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9407:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9281:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9281:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9273:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9151:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9166:4:7",
                "type": ""
              }
            ],
            "src": "9000:419:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9596:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9606:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9618:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9629:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9614:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9614:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9606:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9653:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9664:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9649:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9649:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9672:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9678:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9668:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9668:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9642:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9642:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9642:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9698:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9832:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9706:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9706:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9698:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9576:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9591:4:7",
                "type": ""
              }
            ],
            "src": "9425:419:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10021:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10031:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10043:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10054:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10039:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10039:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10031:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10078:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10089:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10074:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10074:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10097:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10103:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10093:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10093:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10067:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10067:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10067:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10123:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10257:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10131:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10131:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10123:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10001:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10016:4:7",
                "type": ""
              }
            ],
            "src": "9850:419:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10446:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10456:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10468:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10479:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10464:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10464:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10456:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10503:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10514:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10499:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10499:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10522:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10528:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10518:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10518:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10492:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10492:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10492:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10548:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10682:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10556:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10556:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10548:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10426:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10441:4:7",
                "type": ""
              }
            ],
            "src": "10275:419:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10798:124:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10808:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10820:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10831:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10816:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10816:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10808:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10888:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10901:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10912:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10897:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10897:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10844:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10844:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10844:71:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10770:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10782:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10793:4:7",
                "type": ""
              }
            ],
            "src": "10700:222:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11022:120:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11032:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11044:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11055:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11040:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11040:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11032:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11108:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11121:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11132:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11117:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11117:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11068:39:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11068:67:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11068:67:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10994:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11006:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11017:4:7",
                "type": ""
              }
            ],
            "src": "10928:214:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11207:40:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11218:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11234:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "11228:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11228:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "11218:6:7"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11190:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "11200:6:7",
                "type": ""
              }
            ],
            "src": "11148:99:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11349:73:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11366:3:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11371:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11359:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11359:19:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11359:19:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11387:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11406:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11411:4:7",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11402:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11402:14:7"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "11387:11:7"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11321:3:7",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "11326:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "11337:11:7",
                "type": ""
              }
            ],
            "src": "11253:169:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11472:261:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11482:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11505:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11487:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11487:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "11482:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11516:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11539:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11521:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11521:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "11516:1:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11679:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11681:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11681:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11681:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11600:1:7"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11607:66:7",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "11675:1:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11603:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11603:74:7"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11597:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11597:81:7"
                  },
                  "nodeType": "YulIf",
                  "src": "11594:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11711:16:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11722:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11725:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11718:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11718:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "11711:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11459:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11462:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "11468:3:7",
                "type": ""
              }
            ],
            "src": "11428:305:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11784:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11794:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11823:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "11805:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11805:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "11794:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11766:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "11776:7:7",
                "type": ""
              }
            ],
            "src": "11739:96:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11883:48:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11893:32:7",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11918:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "11911:6:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11911:13:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11904:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11904:21:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "11893:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11865:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "11875:7:7",
                "type": ""
              }
            ],
            "src": "11841:90:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11982:81:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11992:65:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12007:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12014:42:7",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "12003:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12003:54:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "11992:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11964:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "11974:7:7",
                "type": ""
              }
            ],
            "src": "11937:126:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12114:32:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12124:16:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "12135:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "12124:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12096:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "12106:7:7",
                "type": ""
              }
            ],
            "src": "12069:77:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12195:43:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12205:27:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12220:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12227:4:7",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "12216:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12216:16:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "12205:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12177:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "12187:7:7",
                "type": ""
              }
            ],
            "src": "12152:86:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12317:79:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12327:63:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12384:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_ERC20_$587_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "12340:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12340:50:7"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "12327:9:7"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_ERC20_$587_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12297:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "12307:9:7",
                "type": ""
              }
            ],
            "src": "12244:152:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12475:53:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12485:37:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12516:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "12498:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12498:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "12485:9:7"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_ERC20_$587_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12455:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "12465:9:7",
                "type": ""
              }
            ],
            "src": "12402:126:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12583:258:7",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12593:10:7",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "12602:1:7",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "12597:1:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12662:63:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "12687:3:7"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "12692:1:7"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "12683:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12683:11:7"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "12706:3:7"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "12711:1:7"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "12702:3:7"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12702:11:7"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "12696:5:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12696:18:7"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12676:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12676:39:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12676:39:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "12623:1:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12626:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "12620:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12620:13:7"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "12634:19:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "12636:15:7",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "12645:1:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12648:2:7",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "12641:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12641:10:7"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "12636:1:7"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "12616:3:7",
                    "statements": []
                  },
                  "src": "12612:113:7"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12759:76:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "12809:3:7"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "12814:6:7"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "12805:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12805:16:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12823:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12798:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12798:27:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12798:27:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "12740:1:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12743:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12737:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12737:13:7"
                  },
                  "nodeType": "YulIf",
                  "src": "12734:2:7"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "12565:3:7",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "12570:3:7",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "12575:6:7",
                "type": ""
              }
            ],
            "src": "12534:307:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12898:269:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12908:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "12922:4:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12928:1:7",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "12918:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12918:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "12908:6:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12939:38:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "12969:4:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12975:1:7",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "12965:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12965:12:7"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "12943:18:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13016:51:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "13030:27:7",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "13044:6:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13052:4:7",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "13040:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13040:17:7"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "13030:6:7"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "12996:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12989:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12989:26:7"
                  },
                  "nodeType": "YulIf",
                  "src": "12986:2:7"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13119:42:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "13133:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13133:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13133:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "13083:18:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "13106:6:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13114:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "13103:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13103:14:7"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "13080:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13080:38:7"
                  },
                  "nodeType": "YulIf",
                  "src": "13077:2:7"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "12882:4:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "12891:6:7",
                "type": ""
              }
            ],
            "src": "12847:320:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13201:152:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13218:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13221:77:7",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13211:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13211:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13211:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13315:1:7",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13318:4:7",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13308:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13308:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13308:15:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13339:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13342:4:7",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13332:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13332:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13332:15:7"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "13173:180:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13387:152:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13404:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13407:77:7",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13397:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13397:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13397:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13501:1:7",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13504:4:7",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13494:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13494:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13494:15:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13525:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13528:4:7",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13518:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13518:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13518:15:7"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "13359:180:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13593:54:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13603:38:7",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "13621:5:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13628:2:7",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13617:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13617:14:7"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13637:2:7",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "13633:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13633:7:7"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "13613:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13613:28:7"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "13603:6:7"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13576:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "13586:6:7",
                "type": ""
              }
            ],
            "src": "13545:102:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13696:79:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13753:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13762:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13765:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13755:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13755:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13755:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "13719:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13744:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "13726:17:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13726:24:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "13716:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13716:35:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "13709:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13709:43:7"
                  },
                  "nodeType": "YulIf",
                  "src": "13706:2:7"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13689:5:7",
                "type": ""
              }
            ],
            "src": "13653:122:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13824:79:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13881:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13890:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13893:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13883:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13883:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13883:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "13847:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13872:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "13854:17:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13854:24:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "13844:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13844:35:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "13837:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13837:43:7"
                  },
                  "nodeType": "YulIf",
                  "src": "13834:2:7"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13817:5:7",
                "type": ""
              }
            ],
            "src": "13781:122:7"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_contract$_ERC20_$587_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$587_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n\n        mstore(add(pos, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(pos, 32), \"ess\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n\n        mstore(add(pos, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(pos, 32), \"ss\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n\n        mstore(add(pos, 0), \"ERC20: insufficient allowance\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(pos, 32), \"alance\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_6417290feae2941246440765532b745e432350c8257455f3b56bc64c698a6388_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n\n        mstore(add(pos, 0), \"You already got coins to test!\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n\n        mstore(add(pos, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(pos, 32), \"dress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n\n        mstore(add(pos, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(pos, 32), \"ress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n\n        mstore(add(pos, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(pos, 32), \" zero\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n\n        mstore(add(pos, 0), \"ERC20: mint to the zero address\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$587__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$587_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6417290feae2941246440765532b745e432350c8257455f3b56bc64c698a6388__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6417290feae2941246440765532b745e432350c8257455f3b56bc64c698a6388_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function convert_t_contract$_ERC20_$587_to_t_address(value) -> converted {\n        converted := convert_t_contract$_ERC20_$587_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC20_$587_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "113:414:4:-:0;;;146:77;;;;;;;;;;1978:113:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2052:5;2044;:13;;;;;;;;;;;;:::i;:::-;;2077:7;2067;:17;;;;;;;;;;;;:::i;:::-;;1978:113;;194:22:4::1;200:10;213:2;194:5;;;:22;;:::i;:::-;113:414:::0;;8415:389:0;8517:1;8498:21;;:7;:21;;;;8490:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8566:49;8595:1;8599:7;8608:6;8566:20;;;:49;;:::i;:::-;8642:6;8626:12;;:22;;;;;;;:::i;:::-;;;;;;;;8680:6;8658:9;:18;8668:7;8658:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;8722:7;8701:37;;8718:1;8701:37;;;8731:6;8701:37;;;;;;:::i;:::-;;;;;;;;8749:48;8777:1;8781:7;8790:6;8749:19;;;:48;;:::i;:::-;8415:389;;:::o;11795:121::-;;;;:::o;12504:120::-;;;;:::o;113:414:4:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:329:7:-;;170:67;234:2;229:3;170:67;:::i;:::-;163:74;;267:33;263:1;258:3;254:11;247:54;327:2;322:3;318:12;311:19;;153:183;;;:::o;342:118::-;429:24;447:5;429:24;:::i;:::-;424:3;417:37;407:53;;:::o;466:419::-;;670:2;659:9;655:18;647:26;;719:9;713:4;709:20;705:1;694:9;690:17;683:47;747:131;873:4;747:131;:::i;:::-;739:139;;637:248;;;:::o;891:222::-;;1022:2;1011:9;1007:18;999:26;;1035:71;1103:1;1092:9;1088:17;1079:6;1035:71;:::i;:::-;989:124;;;;:::o;1119:169::-;;1237:6;1232:3;1225:19;1277:4;1272:3;1268:14;1253:29;;1215:73;;;;:::o;1294:305::-;;1353:20;1371:1;1353:20;:::i;:::-;1348:25;;1387:20;1405:1;1387:20;:::i;:::-;1382:25;;1541:1;1473:66;1469:74;1466:1;1463:81;1460:2;;;1547:18;;:::i;:::-;1460:2;1591:1;1588;1584:9;1577:16;;1338:261;;;;:::o;1605:77::-;;1671:5;1660:16;;1650:32;;;:::o;1688:320::-;;1769:1;1763:4;1759:12;1749:22;;1816:1;1810:4;1806:12;1837:18;1827:2;;1893:4;1885:6;1881:17;1871:27;;1827:2;1955;1947:6;1944:14;1924:18;1921:38;1918:2;;;1974:18;;:::i;:::-;1918:2;1739:269;;;;:::o;2014:180::-;2062:77;2059:1;2052:88;2159:4;2156:1;2149:15;2183:4;2180:1;2173:15;2200:180;2248:77;2245:1;2238:88;2345:4;2342:1;2335:15;2369:4;2366:1;2359:15;113:414:4;;;;;;;",
  "deployedSourceMap": "113:414:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3244:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5192:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3093:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;448:77:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5873:236:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3408:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2367:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6596:429;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3729:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;285:153:4;;;:::i;:::-;;3976:149:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2156:98;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;4532:13;4548:12;:10;:12::i;:::-;4532:28;;4570:32;4579:5;4586:7;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;:::o;3244:106::-;3305:7;3331:12;;3324:19;;3244:106;:::o;5192:286::-;5319:4;5335:15;5353:12;:10;:12::i;:::-;5335:30;;5375:38;5391:4;5397:7;5406:6;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;5467:4;5460:11;;;5192:286;;;;;:::o;3093:91::-;3151:5;3175:2;3168:9;;3093:91;:::o;448:77:4:-;490:5;514:4;507:11;;448:77;:::o;5873:236:0:-;5961:4;5977:13;5993:12;:10;:12::i;:::-;5977:28;;6015:66;6024:5;6031:7;6070:10;6040:11;:18;6052:5;6040:18;;;;;;;;;;;;;;;:27;6059:7;6040:27;;;;;;;;;;;;;;;;:40;;;;:::i;:::-;6015:8;:66::i;:::-;6098:4;6091:11;;;5873:236;;;;:::o;3408:125::-;3482:7;3508:9;:18;3518:7;3508:18;;;;;;;;;;;;;;;;3501:25;;3408:125;;;:::o;2367:102::-;2423:13;2455:7;2448:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2367:102;:::o;6596:429::-;6689:4;6705:13;6721:12;:10;:12::i;:::-;6705:28;;6743:24;6770:11;:18;6782:5;6770:18;;;;;;;;;;;;;;;:27;6789:7;6770:27;;;;;;;;;;;;;;;;6743:54;;6835:15;6815:16;:35;;6807:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6926:60;6935:5;6942:7;6970:15;6951:16;:34;6926:8;:60::i;:::-;7014:4;7007:11;;;;6596:429;;;;:::o;3729:189::-;3808:4;3824:13;3840:12;:10;:12::i;:::-;3824:28;;3862;3872:5;3879:2;3883:6;3862:9;:28::i;:::-;3907:4;3900:11;;;3729:189;;;;:::o;285:153:4:-;363:1;338:21;348:10;338:9;:21::i;:::-;:26;330:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;409:22;415:10;428:2;409:5;:22::i;:::-;285:153::o;3976:149:0:-;4065:7;4091:11;:18;4103:5;4091:18;;;;;;;;;;;;;;;:27;4110:7;4091:27;;;;;;;;;;;;;;;;4084:34;;3976:149;;;;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;10123:370:0:-;10271:1;10254:19;;:5;:19;;;;10246:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10351:1;10332:21;;:7;:21;;;;10324:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10433:6;10403:11;:18;10415:5;10403:18;;;;;;;;;;;;;;;:27;10422:7;10403:27;;;;;;;;;;;;;;;:36;;;;10470:7;10454:32;;10463:5;10454:32;;;10479:6;10454:32;;;;;;:::i;:::-;;;;;;;;10123:370;;;:::o;10770:441::-;10900:24;10927:25;10937:5;10944:7;10927:9;:25::i;:::-;10900:52;;10986:17;10966:16;:37;10962:243;;11047:6;11027:16;:26;;11019:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;:::-;10962:243;10770:441;;;;:::o;7488:651::-;7630:1;7614:18;;:4;:18;;;;7606:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7706:1;7692:16;;:2;:16;;;;7684:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7759:38;7780:4;7786:2;7790:6;7759:20;:38::i;:::-;7808:19;7830:9;:15;7840:4;7830:15;;;;;;;;;;;;;;;;7808:37;;7878:6;7863:11;:21;;7855:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7993:6;7979:11;:20;7961:9;:15;7971:4;7961:15;;;;;;;;;;;;;;;:38;;;;8036:6;8019:9;:13;8029:2;8019:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;8073:2;8058:26;;8067:4;8058:26;;;8077:6;8058:26;;;;;;:::i;:::-;;;;;;;;8095:37;8115:4;8121:2;8125:6;8095:19;:37::i;:::-;7488:651;;;;:::o;8415:389::-;8517:1;8498:21;;:7;:21;;;;8490:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8566:49;8595:1;8599:7;8608:6;8566:20;:49::i;:::-;8642:6;8626:12;;:22;;;;;;;:::i;:::-;;;;;;;;8680:6;8658:9;:18;8668:7;8658:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;8722:7;8701:37;;8718:1;8701:37;;;8731:6;8701:37;;;;;;:::i;:::-;;;;;;;;8749:48;8777:1;8781:7;8790:6;8749:19;:48::i;:::-;8415:389;;:::o;11795:121::-;;;;:::o;12504:120::-;;;;:::o;7:139:7:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:407::-;;;690:2;678:9;669:7;665:23;661:32;658:2;;;706:1;703;696:12;658:2;749:1;774:53;819:7;810:6;799:9;795:22;774:53;:::i;:::-;764:63;;720:117;876:2;902:53;947:7;938:6;927:9;923:22;902:53;:::i;:::-;892:63;;847:118;648:324;;;;;:::o;978:552::-;;;;1120:2;1108:9;1099:7;1095:23;1091:32;1088:2;;;1136:1;1133;1126:12;1088:2;1179:1;1204:53;1249:7;1240:6;1229:9;1225:22;1204:53;:::i;:::-;1194:63;;1150:117;1306:2;1332:53;1377:7;1368:6;1357:9;1353:22;1332:53;:::i;:::-;1322:63;;1277:118;1434:2;1460:53;1505:7;1496:6;1485:9;1481:22;1460:53;:::i;:::-;1450:63;;1405:118;1078:452;;;;;:::o;1536:407::-;;;1661:2;1649:9;1640:7;1636:23;1632:32;1629:2;;;1677:1;1674;1667:12;1629:2;1720:1;1745:53;1790:7;1781:6;1770:9;1766:22;1745:53;:::i;:::-;1735:63;;1691:117;1847:2;1873:53;1918:7;1909:6;1898:9;1894:22;1873:53;:::i;:::-;1863:63;;1818:118;1619:324;;;;;:::o;1949:109::-;2030:21;2045:5;2030:21;:::i;:::-;2025:3;2018:34;2008:50;;:::o;2064:157::-;2164:50;2208:5;2164:50;:::i;:::-;2159:3;2152:63;2142:79;;:::o;2227:364::-;;2343:39;2376:5;2343:39;:::i;:::-;2398:71;2462:6;2457:3;2398:71;:::i;:::-;2391:78;;2478:52;2523:6;2518:3;2511:4;2504:5;2500:16;2478:52;:::i;:::-;2555:29;2577:6;2555:29;:::i;:::-;2550:3;2546:39;2539:46;;2319:272;;;;;:::o;2597:367::-;;2760:67;2824:2;2819:3;2760:67;:::i;:::-;2753:74;;2857:34;2853:1;2848:3;2844:11;2837:55;2923:5;2918:2;2913:3;2909:12;2902:27;2955:2;2950:3;2946:12;2939:19;;2743:221;;;:::o;2970:366::-;;3133:67;3197:2;3192:3;3133:67;:::i;:::-;3126:74;;3230:34;3226:1;3221:3;3217:11;3210:55;3296:4;3291:2;3286:3;3282:12;3275:26;3327:2;3322:3;3318:12;3311:19;;3116:220;;;:::o;3342:327::-;;3505:67;3569:2;3564:3;3505:67;:::i;:::-;3498:74;;3602:31;3598:1;3593:3;3589:11;3582:52;3660:2;3655:3;3651:12;3644:19;;3488:181;;;:::o;3675:370::-;;3838:67;3902:2;3897:3;3838:67;:::i;:::-;3831:74;;3935:34;3931:1;3926:3;3922:11;3915:55;4001:8;3996:2;3991:3;3987:12;3980:30;4036:2;4031:3;4027:12;4020:19;;3821:224;;;:::o;4051:328::-;;4214:67;4278:2;4273:3;4214:67;:::i;:::-;4207:74;;4311:32;4307:1;4302:3;4298:11;4291:53;4370:2;4365:3;4361:12;4354:19;;4197:182;;;:::o;4385:369::-;;4548:67;4612:2;4607:3;4548:67;:::i;:::-;4541:74;;4645:34;4641:1;4636:3;4632:11;4625:55;4711:7;4706:2;4701:3;4697:12;4690:29;4745:2;4740:3;4736:12;4729:19;;4531:223;;;:::o;4760:368::-;;4923:67;4987:2;4982:3;4923:67;:::i;:::-;4916:74;;5020:34;5016:1;5011:3;5007:11;5000:55;5086:6;5081:2;5076:3;5072:12;5065:28;5119:2;5114:3;5110:12;5103:19;;4906:222;;;:::o;5134:369::-;;5297:67;5361:2;5356:3;5297:67;:::i;:::-;5290:74;;5394:34;5390:1;5385:3;5381:11;5374:55;5460:7;5455:2;5450:3;5446:12;5439:29;5494:2;5489:3;5485:12;5478:19;;5280:223;;;:::o;5509:329::-;;5672:67;5736:2;5731:3;5672:67;:::i;:::-;5665:74;;5769:33;5765:1;5760:3;5756:11;5749:54;5829:2;5824:3;5820:12;5813:19;;5655:183;;;:::o;5844:118::-;5931:24;5949:5;5931:24;:::i;:::-;5926:3;5919:37;5909:53;;:::o;5968:112::-;6051:22;6067:5;6051:22;:::i;:::-;6046:3;6039:35;6029:51;;:::o;6086:210::-;;6211:2;6200:9;6196:18;6188:26;;6224:65;6286:1;6275:9;6271:17;6262:6;6224:65;:::i;:::-;6178:118;;;;:::o;6302:248::-;;6446:2;6435:9;6431:18;6423:26;;6459:84;6540:1;6529:9;6525:17;6516:6;6459:84;:::i;:::-;6413:137;;;;:::o;6556:313::-;;6707:2;6696:9;6692:18;6684:26;;6756:9;6750:4;6746:20;6742:1;6731:9;6727:17;6720:47;6784:78;6857:4;6848:6;6784:78;:::i;:::-;6776:86;;6674:195;;;;:::o;6875:419::-;;7079:2;7068:9;7064:18;7056:26;;7128:9;7122:4;7118:20;7114:1;7103:9;7099:17;7092:47;7156:131;7282:4;7156:131;:::i;:::-;7148:139;;7046:248;;;:::o;7300:419::-;;7504:2;7493:9;7489:18;7481:26;;7553:9;7547:4;7543:20;7539:1;7528:9;7524:17;7517:47;7581:131;7707:4;7581:131;:::i;:::-;7573:139;;7471:248;;;:::o;7725:419::-;;7929:2;7918:9;7914:18;7906:26;;7978:9;7972:4;7968:20;7964:1;7953:9;7949:17;7942:47;8006:131;8132:4;8006:131;:::i;:::-;7998:139;;7896:248;;;:::o;8150:419::-;;8354:2;8343:9;8339:18;8331:26;;8403:9;8397:4;8393:20;8389:1;8378:9;8374:17;8367:47;8431:131;8557:4;8431:131;:::i;:::-;8423:139;;8321:248;;;:::o;8575:419::-;;8779:2;8768:9;8764:18;8756:26;;8828:9;8822:4;8818:20;8814:1;8803:9;8799:17;8792:47;8856:131;8982:4;8856:131;:::i;:::-;8848:139;;8746:248;;;:::o;9000:419::-;;9204:2;9193:9;9189:18;9181:26;;9253:9;9247:4;9243:20;9239:1;9228:9;9224:17;9217:47;9281:131;9407:4;9281:131;:::i;:::-;9273:139;;9171:248;;;:::o;9425:419::-;;9629:2;9618:9;9614:18;9606:26;;9678:9;9672:4;9668:20;9664:1;9653:9;9649:17;9642:47;9706:131;9832:4;9706:131;:::i;:::-;9698:139;;9596:248;;;:::o;9850:419::-;;10054:2;10043:9;10039:18;10031:26;;10103:9;10097:4;10093:20;10089:1;10078:9;10074:17;10067:47;10131:131;10257:4;10131:131;:::i;:::-;10123:139;;10021:248;;;:::o;10275:419::-;;10479:2;10468:9;10464:18;10456:26;;10528:9;10522:4;10518:20;10514:1;10503:9;10499:17;10492:47;10556:131;10682:4;10556:131;:::i;:::-;10548:139;;10446:248;;;:::o;10700:222::-;;10831:2;10820:9;10816:18;10808:26;;10844:71;10912:1;10901:9;10897:17;10888:6;10844:71;:::i;:::-;10798:124;;;;:::o;10928:214::-;;11055:2;11044:9;11040:18;11032:26;;11068:67;11132:1;11121:9;11117:17;11108:6;11068:67;:::i;:::-;11022:120;;;;:::o;11148:99::-;;11234:5;11228:12;11218:22;;11207:40;;;:::o;11253:169::-;;11371:6;11366:3;11359:19;11411:4;11406:3;11402:14;11387:29;;11349:73;;;;:::o;11428:305::-;;11487:20;11505:1;11487:20;:::i;:::-;11482:25;;11521:20;11539:1;11521:20;:::i;:::-;11516:25;;11675:1;11607:66;11603:74;11600:1;11597:81;11594:2;;;11681:18;;:::i;:::-;11594:2;11725:1;11722;11718:9;11711:16;;11472:261;;;;:::o;11739:96::-;;11805:24;11823:5;11805:24;:::i;:::-;11794:35;;11784:51;;;:::o;11841:90::-;;11918:5;11911:13;11904:21;11893:32;;11883:48;;;:::o;11937:126::-;;12014:42;12007:5;12003:54;11992:65;;11982:81;;;:::o;12069:77::-;;12135:5;12124:16;;12114:32;;;:::o;12152:86::-;;12227:4;12220:5;12216:16;12205:27;;12195:43;;;:::o;12244:152::-;;12340:50;12384:5;12340:50;:::i;:::-;12327:63;;12317:79;;;:::o;12402:126::-;;12498:24;12516:5;12498:24;:::i;:::-;12485:37;;12475:53;;;:::o;12534:307::-;12602:1;12612:113;12626:6;12623:1;12620:13;12612:113;;;12711:1;12706:3;12702:11;12696:18;12692:1;12687:3;12683:11;12676:39;12648:2;12645:1;12641:10;12636:15;;12612:113;;;12743:6;12740:1;12737:13;12734:2;;;12823:1;12814:6;12809:3;12805:16;12798:27;12734:2;12583:258;;;;:::o;12847:320::-;;12928:1;12922:4;12918:12;12908:22;;12975:1;12969:4;12965:12;12996:18;12986:2;;13052:4;13044:6;13040:17;13030:27;;12986:2;13114;13106:6;13103:14;13083:18;13080:38;13077:2;;;13133:18;;:::i;:::-;13077:2;12898:269;;;;:::o;13173:180::-;13221:77;13218:1;13211:88;13318:4;13315:1;13308:15;13342:4;13339:1;13332:15;13359:180;13407:77;13404:1;13397:88;13504:4;13501:1;13494:15;13528:4;13525:1;13518:15;13545:102;;13637:2;13633:7;13628:2;13621:5;13617:14;13613:28;13603:38;;13593:54;;;:::o;13653:122::-;13726:24;13744:5;13726:24;:::i;:::-;13719:5;13716:35;13706:2;;13765:1;13762;13755:12;13706:2;13696:79;:::o;13781:122::-;13854:24;13872:5;13854:24;:::i;:::-;13847:5;13844:35;13834:2;;13893:1;13890;13883:12;13834:2;13824:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract VoteCoin is ERC20 {\n    constructor() ERC20(\"VoteCoin\", \"VC\") {\n        _mint(msg.sender,  10);\n    }\n\n    // Funcão a ser removida em um contrato de verdade\n    function getTokensForTest() public {\n        require(balanceOf(msg.sender) == 0, \"You already got coins to test!\");\n        _mint(msg.sender,  10);\n    }\n    \n    function getAddress() public view returns(ERC20) {\n        return this;\n    }\n}\n\ncontract TokenGovernance {\n    ERC20 _token;\n    address private owner;\n    uint256 public votersCounter;\n    uint256 public tokenCounter;\n    mapping(address => bool) whoVoted;\n    bool private _finalized;\n    bool private _teste;\n\n    constructor(ERC20 token) {\n        _token = token;\n        votersCounter = 0;\n        tokenCounter = 0;\n        owner = msg.sender;\n    }\n\n    function vote() public {\n        require(!_finalized, \"Pool already ended!\");\n        require(!whoVoted[msg.sender], \"You already voted!\");\n        whoVoted[msg.sender] = true;\n        votersCounter++;\n        tokenCounter += _token.balanceOf(msg.sender);\n    }\n\n    function endVote() public {\n        require(owner == msg.sender, \"You're not the owner!\");\n        require(!_finalized, \"Pool already ended!\");\n        require(votersCounter > 2, \"You need more people to vote!\");\n        require(tokenCounter > 5, \"You need more Tokens in the pool!\");\n        _finalized = true;\n    }\n    \n    function getStatus() public view returns(bool) {\n        return _finalized;\n    }\n\n    function getVoters() public view returns(uint256) {\n        return votersCounter;\n    }\n\n    function getTokens() public view returns(uint256) {\n        return tokenCounter;\n    }\n\n    function hasVoted(address acc) public view returns(bool) {\n        return whoVoted[acc];\n    }\n}",
  "sourcePath": "C:\\Users\\Maulem\\Downloads\\TruffleTest\\src\\contracts\\Governance.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/Governance.sol",
    "exportedSymbols": {
      "Context": [
        712
      ],
      "ERC20": [
        587
      ],
      "IERC20": [
        665
      ],
      "IERC20Metadata": [
        690
      ],
      "TokenGovernance": [
        912
      ],
      "VoteCoin": [
        761
      ]
    },
    "id": 913,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 714,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 715,
        "nodeType": "ImportDirective",
        "scope": 913,
        "sourceUnit": 588,
        "src": "56:55:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 716,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 587,
              "src": "134:5:4"
            },
            "id": 717,
            "nodeType": "InheritanceSpecifier",
            "src": "134:5:4"
          }
        ],
        "contractDependencies": [
          587,
          665,
          690,
          712
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 761,
        "linearizedBaseContracts": [
          761,
          587,
          690,
          665,
          712
        ],
        "name": "VoteCoin",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 730,
              "nodeType": "Block",
              "src": "184:39:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 725,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "200:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "200:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "213:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 724,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 404,
                      "src": "194:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "194:22:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 729,
                  "nodeType": "ExpressionStatement",
                  "src": "194:22:4"
                }
              ]
            },
            "id": 731,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "566f7465436f696e",
                    "id": 720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "166:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_880422d5010f96e0a592d8046b73f446b81176f22ee8bdd7b95570fd99dcc745",
                      "typeString": "literal_string \"VoteCoin\""
                    },
                    "value": "VoteCoin"
                  },
                  {
                    "hexValue": "5643",
                    "id": 721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "178:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ee97ac454d713d43e36d7a2cd3d26679649818751543beb5fab74ab65135265f",
                      "typeString": "literal_string \"VC\""
                    },
                    "value": "VC"
                  }
                ],
                "id": 722,
                "modifierName": {
                  "id": 719,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 587,
                  "src": "160:5:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "160:23:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 718,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "157:2:4"
            },
            "returnParameters": {
              "id": 723,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "184:0:4"
            },
            "scope": 761,
            "src": "146:77:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 750,
              "nodeType": "Block",
              "src": "320:118:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 736,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "348:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 737,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "348:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 735,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98,
                            "src": "338:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "338:21:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "363:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "338:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520616c726561647920676f7420636f696e7320746f207465737421",
                        "id": 741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "366:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6417290feae2941246440765532b745e432350c8257455f3b56bc64c698a6388",
                          "typeString": "literal_string \"You already got coins to test!\""
                        },
                        "value": "You already got coins to test!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6417290feae2941246440765532b745e432350c8257455f3b56bc64c698a6388",
                          "typeString": "literal_string \"You already got coins to test!\""
                        }
                      ],
                      "id": 734,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "330:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "330:69:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 743,
                  "nodeType": "ExpressionStatement",
                  "src": "330:69:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 745,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "415:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "415:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "428:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 744,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 404,
                      "src": "409:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "409:22:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 749,
                  "nodeType": "ExpressionStatement",
                  "src": "409:22:4"
                }
              ]
            },
            "functionSelector": "ad44487d",
            "id": 751,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokensForTest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 732,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "310:2:4"
            },
            "returnParameters": {
              "id": 733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "320:0:4"
            },
            "scope": 761,
            "src": "285:153:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 759,
              "nodeType": "Block",
              "src": "497:28:4",
              "statements": [
                {
                  "expression": {
                    "id": 757,
                    "name": "this",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4294967268,
                    "src": "514:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VoteCoin_$761",
                      "typeString": "contract VoteCoin"
                    }
                  },
                  "functionReturnParameters": 756,
                  "id": 758,
                  "nodeType": "Return",
                  "src": "507:11:4"
                }
              ]
            },
            "functionSelector": "38cc4831",
            "id": 760,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 752,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "467:2:4"
            },
            "returnParameters": {
              "id": 756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 755,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "490:5:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$587",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 754,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 753,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 587,
                      "src": "490:5:4"
                    },
                    "referencedDeclaration": 587,
                    "src": "490:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$587",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "489:7:4"
            },
            "scope": 761,
            "src": "448:77:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 913,
        "src": "113:414:4"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 912,
        "linearizedBaseContracts": [
          912
        ],
        "name": "TokenGovernance",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 764,
            "mutability": "mutable",
            "name": "_token",
            "nodeType": "VariableDeclaration",
            "scope": 912,
            "src": "560:12:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$587",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 763,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 762,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 587,
                "src": "560:5:4"
              },
              "referencedDeclaration": 587,
              "src": "560:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$587",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 766,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 912,
            "src": "578:21:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 765,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "578:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "c659b4f4",
            "id": 768,
            "mutability": "mutable",
            "name": "votersCounter",
            "nodeType": "VariableDeclaration",
            "scope": 912,
            "src": "605:28:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 767,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "605:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d082e381",
            "id": 770,
            "mutability": "mutable",
            "name": "tokenCounter",
            "nodeType": "VariableDeclaration",
            "scope": 912,
            "src": "639:27:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 769,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "639:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 774,
            "mutability": "mutable",
            "name": "whoVoted",
            "nodeType": "VariableDeclaration",
            "scope": 912,
            "src": "672:33:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 773,
              "keyType": {
                "id": 771,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "680:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "672:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 772,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "691:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 776,
            "mutability": "mutable",
            "name": "_finalized",
            "nodeType": "VariableDeclaration",
            "scope": 912,
            "src": "711:23:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 775,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "711:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 778,
            "mutability": "mutable",
            "name": "_teste",
            "nodeType": "VariableDeclaration",
            "scope": 912,
            "src": "740:19:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 777,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "740:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 801,
              "nodeType": "Block",
              "src": "791:112:4",
              "statements": [
                {
                  "expression": {
                    "id": 786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 784,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 764,
                      "src": "801:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$587",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 785,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 781,
                      "src": "810:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$587",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "801:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$587",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 787,
                  "nodeType": "ExpressionStatement",
                  "src": "801:14:4"
                },
                {
                  "expression": {
                    "id": 790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 788,
                      "name": "votersCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 768,
                      "src": "825:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "841:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "825:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 791,
                  "nodeType": "ExpressionStatement",
                  "src": "825:17:4"
                },
                {
                  "expression": {
                    "id": 794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 792,
                      "name": "tokenCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 770,
                      "src": "852:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "867:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "852:16:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 795,
                  "nodeType": "ExpressionStatement",
                  "src": "852:16:4"
                },
                {
                  "expression": {
                    "id": 799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 796,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 766,
                      "src": "878:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 797,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "886:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "886:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "878:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 800,
                  "nodeType": "ExpressionStatement",
                  "src": "878:18:4"
                }
              ]
            },
            "id": 802,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 781,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 802,
                  "src": "778:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$587",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 780,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 779,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 587,
                      "src": "778:5:4"
                    },
                    "referencedDeclaration": 587,
                    "src": "778:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$587",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "777:13:4"
            },
            "returnParameters": {
              "id": 783,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "791:0:4"
            },
            "scope": 912,
            "src": "766:137:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 838,
              "nodeType": "Block",
              "src": "932:238:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "950:11:4",
                        "subExpression": {
                          "id": 806,
                          "name": "_finalized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 776,
                          "src": "951:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c20616c726561647920656e64656421",
                        "id": 808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "963:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c9329a1b8268d95df007a98d010de179e04442d4b4810b22791bc9922fa2d4d",
                          "typeString": "literal_string \"Pool already ended!\""
                        },
                        "value": "Pool already ended!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8c9329a1b8268d95df007a98d010de179e04442d4b4810b22791bc9922fa2d4d",
                          "typeString": "literal_string \"Pool already ended!\""
                        }
                      ],
                      "id": 805,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "942:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "942:43:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 810,
                  "nodeType": "ExpressionStatement",
                  "src": "942:43:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1003:21:4",
                        "subExpression": {
                          "baseExpression": {
                            "id": 812,
                            "name": "whoVoted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 774,
                            "src": "1004:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 815,
                          "indexExpression": {
                            "expression": {
                              "id": 813,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1013:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1013:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1004:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520616c726561647920766f74656421",
                        "id": 817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1026:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c632a2962a3f394ad2ddd6095e4e41ab304f6548326bd589fd8471d8d3c5287d",
                          "typeString": "literal_string \"You already voted!\""
                        },
                        "value": "You already voted!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c632a2962a3f394ad2ddd6095e4e41ab304f6548326bd589fd8471d8d3c5287d",
                          "typeString": "literal_string \"You already voted!\""
                        }
                      ],
                      "id": 811,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "995:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "995:52:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 819,
                  "nodeType": "ExpressionStatement",
                  "src": "995:52:4"
                },
                {
                  "expression": {
                    "id": 825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 820,
                        "name": "whoVoted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 774,
                        "src": "1057:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 823,
                      "indexExpression": {
                        "expression": {
                          "id": 821,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1066:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1066:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1057:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1080:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1057:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 826,
                  "nodeType": "ExpressionStatement",
                  "src": "1057:27:4"
                },
                {
                  "expression": {
                    "id": 828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1094:15:4",
                    "subExpression": {
                      "id": 827,
                      "name": "votersCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 768,
                      "src": "1094:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 829,
                  "nodeType": "ExpressionStatement",
                  "src": "1094:15:4"
                },
                {
                  "expression": {
                    "id": 836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 830,
                      "name": "tokenCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 770,
                      "src": "1119:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 833,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1152:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1152:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 831,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 764,
                          "src": "1135:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$587",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 98,
                        "src": "1135:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1135:28:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1119:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 837,
                  "nodeType": "ExpressionStatement",
                  "src": "1119:44:4"
                }
              ]
            },
            "functionSelector": "632a9a52",
            "id": 839,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "922:2:4"
            },
            "returnParameters": {
              "id": 804,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "932:0:4"
            },
            "scope": 912,
            "src": "909:261:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 874,
              "nodeType": "Block",
              "src": "1202:291:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 843,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 766,
                          "src": "1220:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 844,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1229:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1229:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1220:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75277265206e6f7420746865206f776e657221",
                        "id": 847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1241:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24c2579f012a413ea0cd617022a8c5cadb3fecca0fa05b5ea9d5a745906d188f",
                          "typeString": "literal_string \"You're not the owner!\""
                        },
                        "value": "You're not the owner!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24c2579f012a413ea0cd617022a8c5cadb3fecca0fa05b5ea9d5a745906d188f",
                          "typeString": "literal_string \"You're not the owner!\""
                        }
                      ],
                      "id": 842,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1212:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1212:53:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 849,
                  "nodeType": "ExpressionStatement",
                  "src": "1212:53:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1283:11:4",
                        "subExpression": {
                          "id": 851,
                          "name": "_finalized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 776,
                          "src": "1284:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c20616c726561647920656e64656421",
                        "id": 853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1296:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c9329a1b8268d95df007a98d010de179e04442d4b4810b22791bc9922fa2d4d",
                          "typeString": "literal_string \"Pool already ended!\""
                        },
                        "value": "Pool already ended!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8c9329a1b8268d95df007a98d010de179e04442d4b4810b22791bc9922fa2d4d",
                          "typeString": "literal_string \"Pool already ended!\""
                        }
                      ],
                      "id": 850,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1275:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1275:43:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 855,
                  "nodeType": "ExpressionStatement",
                  "src": "1275:43:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 857,
                          "name": "votersCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 768,
                          "src": "1336:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1352:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "1336:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206e656564206d6f72652070656f706c6520746f20766f746521",
                        "id": 860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1355:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cb1165c0be84973b724fb04bbe4d8ef00a2c3b3498da59052857f23dfceab9ef",
                          "typeString": "literal_string \"You need more people to vote!\""
                        },
                        "value": "You need more people to vote!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cb1165c0be84973b724fb04bbe4d8ef00a2c3b3498da59052857f23dfceab9ef",
                          "typeString": "literal_string \"You need more people to vote!\""
                        }
                      ],
                      "id": 856,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1328:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1328:59:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 862,
                  "nodeType": "ExpressionStatement",
                  "src": "1328:59:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 864,
                          "name": "tokenCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 770,
                          "src": "1405:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "35",
                          "id": 865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1420:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "1405:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206e656564206d6f726520546f6b656e7320696e2074686520706f6f6c21",
                        "id": 867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1423:35:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_efca22e6f9fa41f883c13bfbdfb747a70b46e1f91acf0959bdb119984c96134c",
                          "typeString": "literal_string \"You need more Tokens in the pool!\""
                        },
                        "value": "You need more Tokens in the pool!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_efca22e6f9fa41f883c13bfbdfb747a70b46e1f91acf0959bdb119984c96134c",
                          "typeString": "literal_string \"You need more Tokens in the pool!\""
                        }
                      ],
                      "id": 863,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1397:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1397:62:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 869,
                  "nodeType": "ExpressionStatement",
                  "src": "1397:62:4"
                },
                {
                  "expression": {
                    "id": 872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 870,
                      "name": "_finalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 776,
                      "src": "1469:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 871,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1482:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1469:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 873,
                  "nodeType": "ExpressionStatement",
                  "src": "1469:17:4"
                }
              ]
            },
            "functionSelector": "b9223946",
            "id": 875,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "endVote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1192:2:4"
            },
            "returnParameters": {
              "id": 841,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1202:0:4"
            },
            "scope": 912,
            "src": "1176:317:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 882,
              "nodeType": "Block",
              "src": "1550:34:4",
              "statements": [
                {
                  "expression": {
                    "id": 880,
                    "name": "_finalized",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 776,
                    "src": "1567:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 879,
                  "id": 881,
                  "nodeType": "Return",
                  "src": "1560:17:4"
                }
              ]
            },
            "functionSelector": "4e69d560",
            "id": 883,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 876,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1521:2:4"
            },
            "returnParameters": {
              "id": 879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 878,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 883,
                  "src": "1544:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 877,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1544:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1543:6:4"
            },
            "scope": 912,
            "src": "1503:81:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 890,
              "nodeType": "Block",
              "src": "1640:37:4",
              "statements": [
                {
                  "expression": {
                    "id": 888,
                    "name": "votersCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 768,
                    "src": "1657:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 887,
                  "id": 889,
                  "nodeType": "Return",
                  "src": "1650:20:4"
                }
              ]
            },
            "functionSelector": "cdd72253",
            "id": 891,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVoters",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 884,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1608:2:4"
            },
            "returnParameters": {
              "id": 887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 886,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 891,
                  "src": "1631:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 885,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1631:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1630:9:4"
            },
            "scope": 912,
            "src": "1590:87:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 898,
              "nodeType": "Block",
              "src": "1733:36:4",
              "statements": [
                {
                  "expression": {
                    "id": 896,
                    "name": "tokenCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 770,
                    "src": "1750:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 895,
                  "id": 897,
                  "nodeType": "Return",
                  "src": "1743:19:4"
                }
              ]
            },
            "functionSelector": "aa6ca808",
            "id": 899,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 892,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1701:2:4"
            },
            "returnParameters": {
              "id": 895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 894,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 899,
                  "src": "1724:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 893,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1724:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1723:9:4"
            },
            "scope": 912,
            "src": "1683:86:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 910,
              "nodeType": "Block",
              "src": "1832:37:4",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 906,
                      "name": "whoVoted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 774,
                      "src": "1849:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 908,
                    "indexExpression": {
                      "id": 907,
                      "name": "acc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 901,
                      "src": "1858:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1849:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 905,
                  "id": 909,
                  "nodeType": "Return",
                  "src": "1842:20:4"
                }
              ]
            },
            "functionSelector": "09eef43e",
            "id": 911,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasVoted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 901,
                  "mutability": "mutable",
                  "name": "acc",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "1793:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 900,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1793:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1792:13:4"
            },
            "returnParameters": {
              "id": 905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 904,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "1826:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 903,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1826:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1825:6:4"
            },
            "scope": 912,
            "src": "1775:94:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 913,
        "src": "529:1342:4"
      }
    ],
    "src": "32:1839:4"
  },
  "legacyAST": {
    "absolutePath": "project:/src/contracts/Governance.sol",
    "exportedSymbols": {
      "Context": [
        712
      ],
      "ERC20": [
        587
      ],
      "IERC20": [
        665
      ],
      "IERC20Metadata": [
        690
      ],
      "TokenGovernance": [
        912
      ],
      "VoteCoin": [
        761
      ]
    },
    "id": 913,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 714,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 715,
        "nodeType": "ImportDirective",
        "scope": 913,
        "sourceUnit": 588,
        "src": "56:55:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 716,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 587,
              "src": "134:5:4"
            },
            "id": 717,
            "nodeType": "InheritanceSpecifier",
            "src": "134:5:4"
          }
        ],
        "contractDependencies": [
          587,
          665,
          690,
          712
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 761,
        "linearizedBaseContracts": [
          761,
          587,
          690,
          665,
          712
        ],
        "name": "VoteCoin",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 730,
              "nodeType": "Block",
              "src": "184:39:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 725,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "200:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "200:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "213:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 724,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 404,
                      "src": "194:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "194:22:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 729,
                  "nodeType": "ExpressionStatement",
                  "src": "194:22:4"
                }
              ]
            },
            "id": 731,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "566f7465436f696e",
                    "id": 720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "166:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_880422d5010f96e0a592d8046b73f446b81176f22ee8bdd7b95570fd99dcc745",
                      "typeString": "literal_string \"VoteCoin\""
                    },
                    "value": "VoteCoin"
                  },
                  {
                    "hexValue": "5643",
                    "id": 721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "178:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ee97ac454d713d43e36d7a2cd3d26679649818751543beb5fab74ab65135265f",
                      "typeString": "literal_string \"VC\""
                    },
                    "value": "VC"
                  }
                ],
                "id": 722,
                "modifierName": {
                  "id": 719,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 587,
                  "src": "160:5:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "160:23:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 718,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "157:2:4"
            },
            "returnParameters": {
              "id": 723,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "184:0:4"
            },
            "scope": 761,
            "src": "146:77:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 750,
              "nodeType": "Block",
              "src": "320:118:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 736,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "348:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 737,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "348:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 735,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98,
                            "src": "338:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "338:21:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "363:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "338:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520616c726561647920676f7420636f696e7320746f207465737421",
                        "id": 741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "366:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6417290feae2941246440765532b745e432350c8257455f3b56bc64c698a6388",
                          "typeString": "literal_string \"You already got coins to test!\""
                        },
                        "value": "You already got coins to test!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6417290feae2941246440765532b745e432350c8257455f3b56bc64c698a6388",
                          "typeString": "literal_string \"You already got coins to test!\""
                        }
                      ],
                      "id": 734,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "330:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "330:69:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 743,
                  "nodeType": "ExpressionStatement",
                  "src": "330:69:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 745,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "415:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "415:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "428:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 744,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 404,
                      "src": "409:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "409:22:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 749,
                  "nodeType": "ExpressionStatement",
                  "src": "409:22:4"
                }
              ]
            },
            "functionSelector": "ad44487d",
            "id": 751,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokensForTest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 732,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "310:2:4"
            },
            "returnParameters": {
              "id": 733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "320:0:4"
            },
            "scope": 761,
            "src": "285:153:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 759,
              "nodeType": "Block",
              "src": "497:28:4",
              "statements": [
                {
                  "expression": {
                    "id": 757,
                    "name": "this",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4294967268,
                    "src": "514:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VoteCoin_$761",
                      "typeString": "contract VoteCoin"
                    }
                  },
                  "functionReturnParameters": 756,
                  "id": 758,
                  "nodeType": "Return",
                  "src": "507:11:4"
                }
              ]
            },
            "functionSelector": "38cc4831",
            "id": 760,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 752,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "467:2:4"
            },
            "returnParameters": {
              "id": 756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 755,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "490:5:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$587",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 754,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 753,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 587,
                      "src": "490:5:4"
                    },
                    "referencedDeclaration": 587,
                    "src": "490:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$587",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "489:7:4"
            },
            "scope": 761,
            "src": "448:77:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 913,
        "src": "113:414:4"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 912,
        "linearizedBaseContracts": [
          912
        ],
        "name": "TokenGovernance",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 764,
            "mutability": "mutable",
            "name": "_token",
            "nodeType": "VariableDeclaration",
            "scope": 912,
            "src": "560:12:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$587",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 763,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 762,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 587,
                "src": "560:5:4"
              },
              "referencedDeclaration": 587,
              "src": "560:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$587",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 766,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 912,
            "src": "578:21:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 765,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "578:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "c659b4f4",
            "id": 768,
            "mutability": "mutable",
            "name": "votersCounter",
            "nodeType": "VariableDeclaration",
            "scope": 912,
            "src": "605:28:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 767,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "605:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d082e381",
            "id": 770,
            "mutability": "mutable",
            "name": "tokenCounter",
            "nodeType": "VariableDeclaration",
            "scope": 912,
            "src": "639:27:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 769,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "639:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 774,
            "mutability": "mutable",
            "name": "whoVoted",
            "nodeType": "VariableDeclaration",
            "scope": 912,
            "src": "672:33:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 773,
              "keyType": {
                "id": 771,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "680:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "672:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 772,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "691:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 776,
            "mutability": "mutable",
            "name": "_finalized",
            "nodeType": "VariableDeclaration",
            "scope": 912,
            "src": "711:23:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 775,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "711:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 778,
            "mutability": "mutable",
            "name": "_teste",
            "nodeType": "VariableDeclaration",
            "scope": 912,
            "src": "740:19:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 777,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "740:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 801,
              "nodeType": "Block",
              "src": "791:112:4",
              "statements": [
                {
                  "expression": {
                    "id": 786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 784,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 764,
                      "src": "801:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$587",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 785,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 781,
                      "src": "810:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$587",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "801:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$587",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 787,
                  "nodeType": "ExpressionStatement",
                  "src": "801:14:4"
                },
                {
                  "expression": {
                    "id": 790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 788,
                      "name": "votersCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 768,
                      "src": "825:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "841:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "825:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 791,
                  "nodeType": "ExpressionStatement",
                  "src": "825:17:4"
                },
                {
                  "expression": {
                    "id": 794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 792,
                      "name": "tokenCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 770,
                      "src": "852:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "867:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "852:16:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 795,
                  "nodeType": "ExpressionStatement",
                  "src": "852:16:4"
                },
                {
                  "expression": {
                    "id": 799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 796,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 766,
                      "src": "878:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 797,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "886:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "886:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "878:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 800,
                  "nodeType": "ExpressionStatement",
                  "src": "878:18:4"
                }
              ]
            },
            "id": 802,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 781,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 802,
                  "src": "778:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$587",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 780,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 779,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 587,
                      "src": "778:5:4"
                    },
                    "referencedDeclaration": 587,
                    "src": "778:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$587",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "777:13:4"
            },
            "returnParameters": {
              "id": 783,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "791:0:4"
            },
            "scope": 912,
            "src": "766:137:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 838,
              "nodeType": "Block",
              "src": "932:238:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "950:11:4",
                        "subExpression": {
                          "id": 806,
                          "name": "_finalized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 776,
                          "src": "951:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c20616c726561647920656e64656421",
                        "id": 808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "963:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c9329a1b8268d95df007a98d010de179e04442d4b4810b22791bc9922fa2d4d",
                          "typeString": "literal_string \"Pool already ended!\""
                        },
                        "value": "Pool already ended!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8c9329a1b8268d95df007a98d010de179e04442d4b4810b22791bc9922fa2d4d",
                          "typeString": "literal_string \"Pool already ended!\""
                        }
                      ],
                      "id": 805,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "942:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "942:43:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 810,
                  "nodeType": "ExpressionStatement",
                  "src": "942:43:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1003:21:4",
                        "subExpression": {
                          "baseExpression": {
                            "id": 812,
                            "name": "whoVoted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 774,
                            "src": "1004:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 815,
                          "indexExpression": {
                            "expression": {
                              "id": 813,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1013:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1013:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1004:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520616c726561647920766f74656421",
                        "id": 817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1026:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c632a2962a3f394ad2ddd6095e4e41ab304f6548326bd589fd8471d8d3c5287d",
                          "typeString": "literal_string \"You already voted!\""
                        },
                        "value": "You already voted!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c632a2962a3f394ad2ddd6095e4e41ab304f6548326bd589fd8471d8d3c5287d",
                          "typeString": "literal_string \"You already voted!\""
                        }
                      ],
                      "id": 811,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "995:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "995:52:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 819,
                  "nodeType": "ExpressionStatement",
                  "src": "995:52:4"
                },
                {
                  "expression": {
                    "id": 825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 820,
                        "name": "whoVoted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 774,
                        "src": "1057:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 823,
                      "indexExpression": {
                        "expression": {
                          "id": 821,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1066:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1066:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1057:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1080:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1057:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 826,
                  "nodeType": "ExpressionStatement",
                  "src": "1057:27:4"
                },
                {
                  "expression": {
                    "id": 828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1094:15:4",
                    "subExpression": {
                      "id": 827,
                      "name": "votersCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 768,
                      "src": "1094:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 829,
                  "nodeType": "ExpressionStatement",
                  "src": "1094:15:4"
                },
                {
                  "expression": {
                    "id": 836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 830,
                      "name": "tokenCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 770,
                      "src": "1119:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 833,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1152:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1152:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 831,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 764,
                          "src": "1135:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$587",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 98,
                        "src": "1135:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1135:28:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1119:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 837,
                  "nodeType": "ExpressionStatement",
                  "src": "1119:44:4"
                }
              ]
            },
            "functionSelector": "632a9a52",
            "id": 839,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "922:2:4"
            },
            "returnParameters": {
              "id": 804,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "932:0:4"
            },
            "scope": 912,
            "src": "909:261:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 874,
              "nodeType": "Block",
              "src": "1202:291:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 843,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 766,
                          "src": "1220:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 844,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1229:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1229:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1220:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75277265206e6f7420746865206f776e657221",
                        "id": 847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1241:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24c2579f012a413ea0cd617022a8c5cadb3fecca0fa05b5ea9d5a745906d188f",
                          "typeString": "literal_string \"You're not the owner!\""
                        },
                        "value": "You're not the owner!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24c2579f012a413ea0cd617022a8c5cadb3fecca0fa05b5ea9d5a745906d188f",
                          "typeString": "literal_string \"You're not the owner!\""
                        }
                      ],
                      "id": 842,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1212:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1212:53:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 849,
                  "nodeType": "ExpressionStatement",
                  "src": "1212:53:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1283:11:4",
                        "subExpression": {
                          "id": 851,
                          "name": "_finalized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 776,
                          "src": "1284:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c20616c726561647920656e64656421",
                        "id": 853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1296:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c9329a1b8268d95df007a98d010de179e04442d4b4810b22791bc9922fa2d4d",
                          "typeString": "literal_string \"Pool already ended!\""
                        },
                        "value": "Pool already ended!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8c9329a1b8268d95df007a98d010de179e04442d4b4810b22791bc9922fa2d4d",
                          "typeString": "literal_string \"Pool already ended!\""
                        }
                      ],
                      "id": 850,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1275:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1275:43:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 855,
                  "nodeType": "ExpressionStatement",
                  "src": "1275:43:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 857,
                          "name": "votersCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 768,
                          "src": "1336:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1352:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "1336:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206e656564206d6f72652070656f706c6520746f20766f746521",
                        "id": 860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1355:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cb1165c0be84973b724fb04bbe4d8ef00a2c3b3498da59052857f23dfceab9ef",
                          "typeString": "literal_string \"You need more people to vote!\""
                        },
                        "value": "You need more people to vote!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cb1165c0be84973b724fb04bbe4d8ef00a2c3b3498da59052857f23dfceab9ef",
                          "typeString": "literal_string \"You need more people to vote!\""
                        }
                      ],
                      "id": 856,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1328:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1328:59:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 862,
                  "nodeType": "ExpressionStatement",
                  "src": "1328:59:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 864,
                          "name": "tokenCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 770,
                          "src": "1405:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "35",
                          "id": 865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1420:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "1405:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206e656564206d6f726520546f6b656e7320696e2074686520706f6f6c21",
                        "id": 867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1423:35:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_efca22e6f9fa41f883c13bfbdfb747a70b46e1f91acf0959bdb119984c96134c",
                          "typeString": "literal_string \"You need more Tokens in the pool!\""
                        },
                        "value": "You need more Tokens in the pool!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_efca22e6f9fa41f883c13bfbdfb747a70b46e1f91acf0959bdb119984c96134c",
                          "typeString": "literal_string \"You need more Tokens in the pool!\""
                        }
                      ],
                      "id": 863,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1397:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1397:62:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 869,
                  "nodeType": "ExpressionStatement",
                  "src": "1397:62:4"
                },
                {
                  "expression": {
                    "id": 872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 870,
                      "name": "_finalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 776,
                      "src": "1469:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 871,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1482:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1469:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 873,
                  "nodeType": "ExpressionStatement",
                  "src": "1469:17:4"
                }
              ]
            },
            "functionSelector": "b9223946",
            "id": 875,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "endVote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1192:2:4"
            },
            "returnParameters": {
              "id": 841,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1202:0:4"
            },
            "scope": 912,
            "src": "1176:317:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 882,
              "nodeType": "Block",
              "src": "1550:34:4",
              "statements": [
                {
                  "expression": {
                    "id": 880,
                    "name": "_finalized",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 776,
                    "src": "1567:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 879,
                  "id": 881,
                  "nodeType": "Return",
                  "src": "1560:17:4"
                }
              ]
            },
            "functionSelector": "4e69d560",
            "id": 883,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 876,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1521:2:4"
            },
            "returnParameters": {
              "id": 879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 878,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 883,
                  "src": "1544:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 877,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1544:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1543:6:4"
            },
            "scope": 912,
            "src": "1503:81:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 890,
              "nodeType": "Block",
              "src": "1640:37:4",
              "statements": [
                {
                  "expression": {
                    "id": 888,
                    "name": "votersCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 768,
                    "src": "1657:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 887,
                  "id": 889,
                  "nodeType": "Return",
                  "src": "1650:20:4"
                }
              ]
            },
            "functionSelector": "cdd72253",
            "id": 891,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVoters",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 884,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1608:2:4"
            },
            "returnParameters": {
              "id": 887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 886,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 891,
                  "src": "1631:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 885,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1631:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1630:9:4"
            },
            "scope": 912,
            "src": "1590:87:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 898,
              "nodeType": "Block",
              "src": "1733:36:4",
              "statements": [
                {
                  "expression": {
                    "id": 896,
                    "name": "tokenCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 770,
                    "src": "1750:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 895,
                  "id": 897,
                  "nodeType": "Return",
                  "src": "1743:19:4"
                }
              ]
            },
            "functionSelector": "aa6ca808",
            "id": 899,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 892,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1701:2:4"
            },
            "returnParameters": {
              "id": 895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 894,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 899,
                  "src": "1724:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 893,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1724:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1723:9:4"
            },
            "scope": 912,
            "src": "1683:86:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 910,
              "nodeType": "Block",
              "src": "1832:37:4",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 906,
                      "name": "whoVoted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 774,
                      "src": "1849:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 908,
                    "indexExpression": {
                      "id": 907,
                      "name": "acc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 901,
                      "src": "1858:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1849:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 905,
                  "id": 909,
                  "nodeType": "Return",
                  "src": "1842:20:4"
                }
              ]
            },
            "functionSelector": "09eef43e",
            "id": 911,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasVoted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 901,
                  "mutability": "mutable",
                  "name": "acc",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "1793:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 900,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1793:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1792:13:4"
            },
            "returnParameters": {
              "id": 905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 904,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "1826:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 903,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1826:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1825:6:4"
            },
            "scope": 912,
            "src": "1775:94:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 913,
        "src": "529:1342:4"
      }
    ],
    "src": "32:1839:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "1337": {
      "events": {},
      "links": {},
      "address": "0x6138582618e7df71240522940A4ACf55842Db608",
      "transactionHash": "0x12e018f807c64f585b669bccd71f181bbb10e99a319067a78d624425317e535e"
    },
    "1377": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x7d3d77B061fB602676AEE1D0fa430F9AD3Bd3032",
      "transactionHash": "0x0222aa671d043ec82252f66fbc09308c5efcddac604738592bada16738e324e2"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-04-21T23:06:46.212Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}